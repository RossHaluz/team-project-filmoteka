{"mappings":"gfAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,0BAMiB,IAAI,EAAAC,EAAAC,SACK,IAAI,EAAAC,EAAAC,0BCP9BJ,EAAA,S,8BCCMK,EAAW,+BAGXC,GAFY,GAAYC,OAATF,EAAS,wBACX,GAAYE,OAATF,EAAS,iBAChB,GAAYE,OAATF,EAAS,YCJ3BL,EAAA,S,8BAMMQ,EAAoB,IAAI,EAAAL,EAAAC,0BAkBvB,SAASK,IAIdC,EAAAC,KAAKC,YAAYC,UAAY,GAC7B,IAAMC,EAAYN,EAAkBO,gBACpCC,QAAQC,IAAIH,GACZA,EAAUI,KAAI,SAAAC,GACZC,EAAcD,GAAIE,MAAK,SAAAC,GAO3B,IAA2BC,EAkBNC,EAHEC,EAfIF,EANHD,EAOtBZ,EAAAC,KAAKC,YAAYC,WAAa,8DAEqBN,OADxBgB,EAAKJ,GAAG,0DAEjCZ,OADiDgB,EAAKG,YAAY,WAIjCnB,OAHjCgB,EAAKI,MACN,mGAGmCpB,OADDgB,EAAKI,MAAM,8CAERpB,QAMjBkB,EAP6BF,EAAKE,OAQhDA,EAAOP,KAAI,SAAAU,G,OAAMA,EAAGC,I,IAAMC,KAAK,OARyB,4CACMvB,QASlDiB,EAT+BD,EAAKQ,aAUhD,KAAsBxB,OAAjBiB,EAAKQ,MAAM,EAAG,KAV2C,qE,OAzCvEtB,EAAAC,KAAKsB,MAAMC,iBAAiB,QAASzB,GACrCC,EAAAC,KAAKsB,MAAMC,iBAAiB,SAE5B,WACExB,EAAAC,KAAKwB,QAAQC,UAAUC,OAAO,eAC9B3B,EAAAC,KAAKsB,MAAMG,UAAUE,IAAI,c,IAW3B5B,EAAAC,KAAKsB,MAAMC,iBAAiB,QAASzB,GFjBrC,IAAM8B,EAAoB,IAAI,EAAApC,EAAAC,0BAQvB,SAASgB,EAAcD,GAC5B,OAAOqB,MAAM,GAAYjC,OAATD,GAAuBC,OAAdY,EAAG,aAAmBZ,OCfjC,qCDgBXc,MAAK,SAAAoB,GACJ,OAAOA,EAASC,M,IAEjBC,OAAM,SAAAC,GACL5B,QAAQC,IAAI2B,E,IAIlB,SAASC,IACP,GAAInC,EAAAC,KAAKwB,QAAQC,UAAUU,SAAS,eAAgB,CAClDpC,EAAAC,KAAKsB,MAAMG,UAAUC,OAAO,eAC5B3B,EAAAC,KAAKwB,QAAQC,UAAUE,IAAI,eAC3B5B,EAAAC,KAAKC,YAAYC,UAAY,GAC7B,IAAMkC,EAASR,EAAkBS,WACjChC,QAAQC,IAAI8B,GACZA,EAAO7B,KAAI,SAAAC,GACTC,EAAcD,GAAIE,MAAK,SAAAC,GAO7B,IAAwBC,EAkBNC,EAHEC,EAfIF,EANDD,EAOrBZ,EAAAC,KAAKC,YAAYC,WAAa,8DAEqBN,OADxBgB,EAAKJ,GAAG,0DAEjCZ,OADiDgB,EAAKG,YAAY,WAIjCnB,OAHjCgB,EAAKI,MACN,mGAGmCpB,OADDgB,EAAKI,MAAM,8CAERpB,QAMpBkB,EAP6BF,EAAKE,OAQ7CA,EAAOP,KAAI,SAAAU,G,OAAMA,EAAGC,I,IAAMC,KAAK,OARsB,4CACMvB,QASlDiB,EAT+BD,EAAKQ,aAU7C,KAAsBxB,OAAjBiB,EAAKQ,MAAM,EAAG,KAVwC,qE,QAzCpEtB,EAAAC,KAAKwB,QAAQD,iBAAiB,SAE9B,WACExB,EAAAC,KAAKsB,MAAMG,UAAUC,OAAO,eAC5B3B,EAAAC,KAAKwB,QAAQC,UAAUE,IAAI,c,IAH7B5B,EAAAC,KAAKwB,QAAQD,iBAAiB,QAASW,GA8BvCA,I","sources":["src/js/main-library.js","src/js/main/renderLibraryMarkup.js","src/js/main/watched.js","src/js/fetch-service/api-vars.js","src/js/main/Queue.js"],"sourcesContent":["import refs from './fetch-service/refs';\nimport { LocalStorageServiceFilms } from './fetch-service/localStorageService';\nimport { addWatched } from './main/renderLibrary';\nimport { onClickBtnQueue, onClickBtnWatched } from './main/header-library-btn';\nimport {\n  getFilmsById,\n  onClickBtnLibraryWatched,\n} from './main/renderLibraryMarkup';\nimport { renderFilmsById } from './main/watched';\nimport { renderFilmsByIdQue } from './main/Queue';\nimport { openTeamModal } from './modal/close-modal';\nimport { createMarkup } from './fetch-service/renderFuncApi';\n\n// import { openModal } from './modal/modals';\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from \"../fetch-service/refs\";\n\n\n\nconst fetchApi = new FetchFilmsApi();\nconst localStorageFilms = new LocalStorageServiceFilms()\n\nexport function getFilmsById() {\n    const getFilms = localStorageFilms.getFilms();\n    getFilms.map(film => {\n        fetchApi.getIdFilm = film\n            fetchApi.getDateilsMovieById().then(data => creatLibraryMarkup(data));\n    })\n\n}\n \n\nfunction creatLibraryMarkup({poster_path, title}){ \n    const markup =  `\n    <li class=\"library-list__item card-set-iteam\">\n    <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\">\n      <h3 class=\"library-list__matkup-title\">${title}</h3>\n      </li>\n    `;\n\n    refs.libraryList.insertAdjacentHTML('beforeend', markup)\n\n}\n\n\n\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from '../fetch-service/refs';\nimport { API_KEY, ID_URL } from '../fetch-service/api-vars';\nimport { renderFilmsByIdQue } from './Queue';\n\nconst localStorageFilms = new LocalStorageServiceFilms();\nrefs.watched.addEventListener('click', onClickWatched);\nrefs.watched.addEventListener('click', renderFilmsById);\nfunction onClickWatched() {\n  refs.queue.classList.remove('btn--active');\n  refs.watched.classList.add('btn--active');\n}\n\nexport function fetchFilmById(id) {\n  return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfunction renderFilmsById() {\n  if (refs.watched.classList.contains('btn--active')) {\n    refs.queue.classList.remove('btn--active');\n    refs.watched.classList.add('btn--active');\n    refs.libraryList.innerHTML = '';\n    const getIds = localStorageFilms.getFilms();\n    console.log(getIds);\n    getIds.map(id => {\n      fetchFilmById(id).then(filmData => {\n        createListItem(filmData);\n      });\n    });\n  }\n}\nrenderFilmsById();\nfunction createListItem(data) {\n  refs.libraryList.innerHTML += `<li class=\"gallery-card card\">\n              <img data-id=${data.id} \n              src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${\n    data.title\n  }\" class=\"card-image\">\n            <div class=\"card-info\">\n              <p class=\"card-name\">${data.title}</p>\n              <p class=\"card-genre\">${showGenres(data.genres)}\n              <span class=\"card-year\">${showYear(data.release_date)}\n              </span></p>\n              </div>\n          </li>`;\n}\n\nfunction showGenres(genres) {\n  return genres.map(el => el.name).join(', ');\n}\nfunction showYear(date) {\n  return `| ${date.slice(0, 4)}`;\n}\n","const API_KEY = 'f896ccabafb5d2939071b9f1aa9e42c1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL, ID_URL };","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from '../fetch-service/refs';\nimport { API_KEY, ID_URL } from '../fetch-service/api-vars';\nimport { fetchFilmById } from './watched';\n\nconst localStorageFilms = new LocalStorageServiceFilms();\nrefs.queue.addEventListener('click', renderFilmsByIdQue);\nrefs.queue.addEventListener('click', onClickQueue);\n\nfunction onClickQueue() {\n  refs.watched.classList.remove('btn--active');\n  refs.queue.classList.add('btn--active');\n}\n// function fetchFilmById(id) {\n//   return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n//     .then(response => {\n//       return response.json();\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     });\n// }\nrefs.queue.addEventListener('click', renderFilmsByIdQue);\nexport function renderFilmsByIdQue() {\n  // if (refs.queue.classList.contains('btn--active')) {\n  //     refs.watched.classList.remove('btn--active');\n  //     refs.queue.classList.add('btn--active');\n  refs.libraryList.innerHTML = '';\n  const getIdsQue = localStorageFilms.getQueueFilms();\n  console.log(getIdsQue);\n  getIdsQue.map(id => {\n    fetchFilmById(id).then(filmData => {\n      createListItemQue(filmData);\n    });\n  });\n}\n// }\n\nfunction createListItemQue(data) {\n  refs.libraryList.innerHTML += `<li class=\"gallery-card card\">\n              <img data-id=${data.id} \n              src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${\n    data.title\n  }\" class=\"card-image\">\n            <div class=\"card-info\">\n              <p class=\"card-name\">${data.title}</p>\n              <p class=\"card-genre\">${showGenresQue(data.genres)}\n              <span class=\"card-year\">${showYearQue(data.release_date)}\n              </span></p>\n              </div>\n          </li>`;\n}\n\nfunction showGenresQue(genres) {\n  return genres.map(el => el.name).join(', ');\n}\nfunction showYearQue(date) {\n  return `| ${date.slice(0, 4)}`;\n}\n\n// import FetchFilmsApi from '../fetch-service/fechFilmsApi';\n// import { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\n// import { refs } from '../fetch-service/refs';\n// import { API_KEY, ID_URL } from '../fetch-service/api-vars';\n// import {\n//   createMarkup,\n//   toChangeGenres,\n//   toChangeNum,\n// } from '../fetch-service/renderFuncApi';\n\n// const fetchFilmsApi = new FetchFilmsApi();\n// const localStorageFilms = new LocalStorageServiceFilms();\n// let filmId;\n\n// refs.modalBtnQueue.addEventListener('click', onClickQueue);\n\n// function onClickQueue() {\n//   refs.queue.classList.remove('btn--active');\n//   refs.watched.classList.add('btn--active');\n// }\n\n// function fetchFilmById(id) {\n//   return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n//     .then(response => {\n//       return response.json();\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     });\n// }\n"],"names":["parcelRequire","$90yji","default","$gtaxt","LocalStorageServiceFilms","$b921d68012d7e8ab$export$ca6dda5263526f75","$b921d68012d7e8ab$export$b85aa4b53a955004","concat","$855acb6a02117798$var$localStorageFilms","$855acb6a02117798$export$a351e12be08d1aad","$1RuQn","refs","libraryList","innerHTML","getIdsQue","getQueueFilms","console","log","map","id","$a6644c01cbff66ac$export$25998e5c2601cffd","then","filmData","data","date","genres","poster_path","title","el","name","join","release_date","slice","queue","addEventListener","watched","classList","remove","add","$a6644c01cbff66ac$var$localStorageFilms","fetch","response","json","catch","error","$a6644c01cbff66ac$var$renderFilmsById","contains","getIds","getFilms"],"version":3,"file":"library.7b74bc87.js.map"}