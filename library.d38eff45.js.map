{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,0BAMiB,IAAI,EAAAC,EAAAC,SACK,IAAI,EAAAC,EAAAC,0BCP9BJ,EAAA,S,0BCAAA,EAAA,S,0BAMA,MAAMK,EAAoB,IAAI,EAAAF,EAAAC,0BAkBvB,SAASE,IAIdC,EAAAC,KAAKC,YAAYC,UAAY,GAC7B,MAAMC,EAAYN,EAAkBO,gBACpCC,QAAQC,IAAIH,GACZA,EAAUI,KAAIC,IACZC,EAAcD,GAAIE,MAAKC,IAO3B,IAA2BC,EAkBNC,EAHEC,EAfIF,EANHD,EAOtBZ,EAAAC,KAAKC,YAAYC,WAAa,8DACHU,EAAKJ,2DACmBI,EAAKG,qBACtDH,EAAKI,uGAG4BJ,EAAKI,kDAQnBF,EAP6BF,EAAKE,OAQhDA,EAAOP,KAAIU,GAAMA,EAAGC,OAAMC,KAAK,gDAEnBN,EAT+BD,EAAKQ,aAUhD,KAAKP,EAAKQ,MAAM,EAAG,wEAzBK,GAC3B,G,CA3BNtB,EAAAC,KAAKsB,MAAMC,iBAAiB,QAASzB,GACrCC,EAAAC,KAAKsB,MAAMC,iBAAiB,SAE5B,WACExB,EAAAC,KAAKwB,QAAQC,UAAUC,OAAO,eAC9B3B,EAAAC,KAAKsB,MAAMG,UAAUE,IAAI,c,IAW3B5B,EAAAC,KAAKsB,MAAMC,iBAAiB,QAASzB,GDjBrC,MAAM8B,EAAoB,IAAI,EAAAjC,EAAAC,0BAQvB,SAASa,EAAcD,GAC5B,OAAOqB,MAAM,sCAAYrB,8CACtBE,MAAKoB,GACGA,EAASC,SAEjBC,OAAMC,IACL5B,QAAQC,IAAI2B,EAAM,G,CAIxB,SAASC,IACP,GAAInC,EAAAC,KAAKwB,QAAQC,UAAUU,SAAS,eAAgB,CAClDpC,EAAAC,KAAKsB,MAAMG,UAAUC,OAAO,eAC5B3B,EAAAC,KAAKwB,QAAQC,UAAUE,IAAI,eAC3B5B,EAAAC,KAAKC,YAAYC,UAAY,GAC7B,MAAMkC,EAASR,EAAkBS,WACjChC,QAAQC,IAAI8B,GACZA,EAAO7B,KAAIC,IACTC,EAAcD,GAAIE,MAAKC,IAO7B,IAAwBC,EAkBNC,EAHEC,EAfIF,EANDD,EAOrBZ,EAAAC,KAAKC,YAAYC,WAAa,8DACHU,EAAKJ,2DACmBI,EAAKG,qBACtDH,EAAKI,uGAG4BJ,EAAKI,kDAQtBF,EAP6BF,EAAKE,OAQ7CA,EAAOP,KAAIU,GAAMA,EAAGC,OAAMC,KAAK,gDAEtBN,EAT+BD,EAAKQ,aAU7C,KAAKP,EAAKQ,MAAM,EAAG,wEAzBI,GACxB,G,EA3BRtB,EAAAC,KAAKwB,QAAQD,iBAAiB,SAE9B,WACExB,EAAAC,KAAKsB,MAAMG,UAAUC,OAAO,eAC5B3B,EAAAC,KAAKwB,QAAQC,UAAUE,IAAI,c,IAH7B5B,EAAAC,KAAKwB,QAAQD,iBAAiB,QAASW,GA8BvCA,I","sources":["src/js/main-library.js","src/js/main/renderLibraryMarkup.js","src/js/main/watched.js","src/js/main/Queue.js"],"sourcesContent":["import refs from './fetch-service/refs';\nimport { LocalStorageServiceFilms } from './fetch-service/localStorageService';\nimport { addWatched } from './main/renderLibrary';\nimport { onClickBtnQueue, onClickBtnWatched } from './main/header-library-btn';\nimport {\n  getFilmsById,\n  onClickBtnLibraryWatched,\n} from './main/renderLibraryMarkup';\nimport { renderFilmsById } from './main/watched';\nimport { renderFilmsByIdQue } from './main/Queue';\nimport { openTeamModal } from './modal/close-modal';\nimport { createMarkup } from './fetch-service/renderFuncApi';\n\n// import { openModal } from './modal/modals';\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from \"../fetch-service/refs\";\n\n\n\nconst fetchApi = new FetchFilmsApi();\nconst localStorageFilms = new LocalStorageServiceFilms()\n\nexport function getFilmsById() {\n    const getFilms = localStorageFilms.getFilms();\n    getFilms.map(film => {\n        fetchApi.getIdFilm = film\n            fetchApi.getDateilsMovieById().then(data => creatLibraryMarkup(data));\n    })\n\n}\n \n\nfunction creatLibraryMarkup({poster_path, title}){ \n    const markup =  `\n    <li class=\"library-list__item card-set-iteam\">\n    <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\">\n      <h3 class=\"library-list__matkup-title\">${title}</h3>\n      </li>\n    `;\n\n    refs.libraryList.insertAdjacentHTML('beforeend', markup)\n\n}\n\n\n\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from '../fetch-service/refs';\nimport { API_KEY, ID_URL } from '../fetch-service/api-vars';\nimport { renderFilmsByIdQue } from './Queue';\n\nconst localStorageFilms = new LocalStorageServiceFilms();\nrefs.watched.addEventListener('click', onClickWatched);\nrefs.watched.addEventListener('click', renderFilmsById);\nfunction onClickWatched() {\n  refs.queue.classList.remove('btn--active');\n  refs.watched.classList.add('btn--active');\n}\n\nexport function fetchFilmById(id) {\n  return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfunction renderFilmsById() {\n  if (refs.watched.classList.contains('btn--active')) {\n    refs.queue.classList.remove('btn--active');\n    refs.watched.classList.add('btn--active');\n    refs.libraryList.innerHTML = '';\n    const getIds = localStorageFilms.getFilms();\n    console.log(getIds);\n    getIds.map(id => {\n      fetchFilmById(id).then(filmData => {\n        createListItem(filmData);\n      });\n    });\n  }\n}\nrenderFilmsById();\nfunction createListItem(data) {\n  refs.libraryList.innerHTML += `<li class=\"gallery-card card\">\n              <img data-id=${data.id} \n              src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${\n    data.title\n  }\" class=\"card-image\">\n            <div class=\"card-info\">\n              <p class=\"card-name\">${data.title}</p>\n              <p class=\"card-genre\">${showGenres(data.genres)}\n              <span class=\"card-year\">${showYear(data.release_date)}\n              </span></p>\n              </div>\n          </li>`;\n}\n\nfunction showGenres(genres) {\n  return genres.map(el => el.name).join(', ');\n}\nfunction showYear(date) {\n  return `| ${date.slice(0, 4)}`;\n}\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from '../fetch-service/refs';\nimport { API_KEY, ID_URL } from '../fetch-service/api-vars';\nimport { fetchFilmById } from './watched';\n\nconst localStorageFilms = new LocalStorageServiceFilms();\nrefs.queue.addEventListener('click', renderFilmsByIdQue);\nrefs.queue.addEventListener('click', onClickQueue);\n\nfunction onClickQueue() {\n  refs.watched.classList.remove('btn--active');\n  refs.queue.classList.add('btn--active');\n}\n// function fetchFilmById(id) {\n//   return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n//     .then(response => {\n//       return response.json();\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     });\n// }\nrefs.queue.addEventListener('click', renderFilmsByIdQue);\nexport function renderFilmsByIdQue() {\n  // if (refs.queue.classList.contains('btn--active')) {\n  //     refs.watched.classList.remove('btn--active');\n  //     refs.queue.classList.add('btn--active');\n  refs.libraryList.innerHTML = '';\n  const getIdsQue = localStorageFilms.getQueueFilms();\n  console.log(getIdsQue);\n  getIdsQue.map(id => {\n    fetchFilmById(id).then(filmData => {\n      createListItemQue(filmData);\n    });\n  });\n}\n// }\n\nfunction createListItemQue(data) {\n  refs.libraryList.innerHTML += `<li class=\"gallery-card card\">\n              <img data-id=${data.id} \n              src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${\n    data.title\n  }\" class=\"card-image\">\n            <div class=\"card-info\">\n              <p class=\"card-name\">${data.title}</p>\n              <p class=\"card-genre\">${showGenresQue(data.genres)}\n              <span class=\"card-year\">${showYearQue(data.release_date)}\n              </span></p>\n              </div>\n          </li>`;\n}\n\nfunction showGenresQue(genres) {\n  return genres.map(el => el.name).join(', ');\n}\nfunction showYearQue(date) {\n  return `| ${date.slice(0, 4)}`;\n}\n\n// import FetchFilmsApi from '../fetch-service/fechFilmsApi';\n// import { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\n// import { refs } from '../fetch-service/refs';\n// import { API_KEY, ID_URL } from '../fetch-service/api-vars';\n// import {\n//   createMarkup,\n//   toChangeGenres,\n//   toChangeNum,\n// } from '../fetch-service/renderFuncApi';\n\n// const fetchFilmsApi = new FetchFilmsApi();\n// const localStorageFilms = new LocalStorageServiceFilms();\n// let filmId;\n\n// refs.modalBtnQueue.addEventListener('click', onClickQueue);\n\n// function onClickQueue() {\n//   refs.queue.classList.remove('btn--active');\n//   refs.watched.classList.add('btn--active');\n// }\n\n// function fetchFilmById(id) {\n//   return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n//     .then(response => {\n//       return response.json();\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     });\n// }\n"],"names":["parcelRequire","$lhLDm","default","$g8ufL","LocalStorageServiceFilms","$c3bd7d1fe26b644a$var$localStorageFilms","$c3bd7d1fe26b644a$export$a351e12be08d1aad","$96LRb","refs","libraryList","innerHTML","getIdsQue","getQueueFilms","console","log","map","id","$2cf67d43b3b1bcdf$export$25998e5c2601cffd","then","filmData","data","date","genres","poster_path","title","el","name","join","release_date","slice","queue","addEventListener","watched","classList","remove","add","$2cf67d43b3b1bcdf$var$localStorageFilms","fetch","response","json","catch","error","$2cf67d43b3b1bcdf$var$renderFilmsById","contains","getIds","getFilms"],"version":3,"file":"library.d38eff45.js.map"}