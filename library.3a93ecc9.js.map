{"mappings":"gfAAAA,EAAA,SCAAA,EAAA,S","sources":["src/js/main-library.js","src/js/fetch-service/localStorageService.js"],"sourcesContent":["import refs from \"./fetch-service/refs\";\nimport { LocalStorageServiceFilms } from \"./fetch-service/localStorageService\";\nimport { addWatched } from \"./main/renderLibrary\";\n\n","import getTrendingMoviesAndRender from \"../main/renderMainMarkup\";\nimport FetchFilmsApi from \"./fechFilmsApi\";\nimport refs from \"./refs\";\n\n\nexport class LocalStorageServiceFilms {\n    constructor() {\n        this.keyName = 'films';\n        this.idFilm = null;\n    }\n\n    getFilms() {\n        const filmsLocalStorage = localStorage.getItem(this.keyName)\n\n        if (filmsLocalStorage !== null) {\n            return JSON.parse(filmsLocalStorage)\n        }\n\n        return [];\n    }\n\n    setFilms(id) {\n        let films = this.getFilms();\n        let pushFilm = false;\n        const index = films.indexOf(id);\n        if (index === -1) {\n            films.push(id);\n            pushFilm = true;\n        } else {\n            films.splice(index, 1)\n        }\n\n        localStorage.setItem(this.keyName, JSON.stringify(films));\n\n        return {\n            pushFilm,\n            films,\n        }\n    }\n\n    get filmByID() {\n        return this.idFilm;\n    }\n\n    set filmByID(newIdFilm) {\n        this.idFilm = newIdFilm;\n    }\n}\n\n"],"names":["parcelRequire"],"version":3,"file":"library.3a93ecc9.js.map"}