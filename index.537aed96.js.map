{"mappings":"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","sources":["src/js/main.js","src/js/main/searchMovies.js","src/js/main/changeColor.js","src/js/modal/modals.js","src/js/main/trailersGallery.js","src/js/paginatin/pagination.js","src/js/main/buttonScrolUp.js"],"sourcesContent":["import FetchFilmsApi from './fetch-service/fechFilmsApi';\nimport { onKeywordSearch } from './main/searchMovies';\nimport { onCreat, creatCards } from './main/renderMainMarkup';\nimport { onButtonScrolUp } from './main/buttonScrolUp';\nimport { onClickChangeColor } from './main/changeColor';\nimport { createMarkup } from './fetch-service/renderFuncApi';\nimport { openModal } from './modal/modals';\nimport { openTeamModal } from './modal/close-modal';\nonButtonScrolUp();\nonCreat();\n// addListenerToCard();\nimport { onSearchTrailer, getTrailerId, openTrailersGallary, showTrailersGallary, closeTrailersGallary } from \"./main/trailersGallery\";\nimport { onClickBtnNext } from './paginatin/pagination';\n\n\n\n\n\n\n","import { refs } from '../fetch-service/refs';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { creatCards } from './renderMainMarkup';\n\nconst filmsAPIService = new FetchFilmsApi();\nconst parameters = {\n  mediaType: 'movie',\n  lang: 'en-US',\n  page: filmsAPIService.page,\n  include_adult: false,\n};\n\nrefs.form.addEventListener('submit', onKeywordSearch);\n\n\n// Функція реалізує пошук та відображення фільмів за ключовим словом. Якщо пустий інпут або такого фільму немає - з'являється сповіщення. \nexport function onKeywordSearch(event) {\n  event.preventDefault();   \n\n  filmsAPIService.actualQuery = event.currentTarget.elements.filmname.value;\n\n  if (!filmsAPIService.actualQuery) {\n    refs.formNotification.textContent = \"The text field is empty. Please type something into it and retry.\",\n      setTimeout(() => refs.formNotification.textContent = \"\", 3000)\n    return;\n  }\n\n  filmsAPIService.fetchWithSearchFilmData(parameters).then(resp => {\n    if (!resp.data.results.length) {\n    refs.formNotification.textContent = \"Search result not successful. Enter the correct movie name and\";\n      setTimeout(() => refs.formNotification.textContent = \"\", 3000)\n      return;\n    }\n    creatCards(resp.data.results);\n  });\n}\n\n","import { refs } from \"../fetch-service/refs\";\n\n\nrefs.changeColor.addEventListener('click', onClickChangeColor);\n\nexport function onClickChangeColor() {\n    const edit = document.body;\n    edit.classList.toggle('dark');\n}\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { refs } from '../fetch-service/refs';\nimport { createMarkup } from '../fetch-service/renderFuncApi';\n\nconst fetchFilmsApi = new FetchFilmsApi();\nrefs.gallery.addEventListener('click', openModal);\nrefs.modalCloseBtn.addEventListener('click', closeModal);\n\nasync function openModal(e) {\n  if (!e.target.classList.contains('card-image')) {\n    return;\n  }\n\n  refs.backdrop.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n  refs.modalContent.innerHTML = '';\n  const filmId = e.target.dataset.id;\n\n  fetchFilmsApi\n    .getCurrentFilm({ id: filmId })\n    .then(data => createMarkup(data.data))\n    .catch(error => console.log(error));\n  refs.backdrop.addEventListener('click', closeModal);\n  window.addEventListener('keydown', closeModal);\n}\n\nasync function closeModal(e) {\n  if (\n    e.target === refs.modalCloseBtn ||\n    e.target === refs.backdrop ||\n    e.keyCode === 27\n  ) {\n    document.body.classList.remove('no-scroll');\n    refs.backdrop.classList.add('is-hidden');\n    }\n  refs.backdrop.removeEventListener('click', closeModal);\n  window.removeEventListener('keydown', closeModal);\n}\n\nexport { openModal };\n\nwindow.addEventListener('keydown', onEscClick)\n\nfunction onEscClick(evt) {\n  if (evt.code === 'Escape') {\n    console.log('Escape');\n    document.body.classList.remove('no-scroll');\n    refs.backdrop.classList.add('is-hidden');\n  }\n}\n\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', onBackdropClick);\nconsole.log(backdrop);\n\nfunction onBackdropClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    console.log('Backdrop');\n    document.body.classList.remove('no-scroll');\n    refs.backdrop.classList.add('is-hidden');\n  }\n}","import { refs } from '../fetch-service/refs';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\n\nconst api = new FetchFilmsApi(); //ініціалізація класу запитів\n\nlet currentId = 0; // поточний id фільму, який відкритий в модалці\nlet videosArr = []; // масив для всіх знайдених відео\nlet embedTrailer = []; // масив для трейлерів на ютубі, які додаються у відео-галерею\n\nconst trailerBtn = document.querySelector('.modal__trailer-btn'); //кнопка запуску трейлера\nconst closeBtn = document.querySelector('.closebtn'); //кнопка закриття відео-галереї\nconst overlayForVideo = document.querySelector('#overlay-video'); //модалка для відео-галереї\nconst overlayContent = document.querySelector('#overlay-content'); //наповнення відео-галереї\n\nrefs.gallery.addEventListener('click', getTrailerId); //слухач принатискання на картку фільма\nrefs.backdrop.addEventListener('click', openTrailersGallary); //слухач відкриття модалного вікна з карткою фільму\ncloseBtn.addEventListener('click', closeTrailersGallary); //слухач закриття відео-галереї\n\n// отримання id фільму\nfunction getTrailerId(e) {\n  currentId = Number(e.target.dataset.id);\n}\n\n// відкриття модалки з трейлерами при натисканні на кнопку ▶ \"Show Trailer\" \nfunction openTrailersGallary(e) {\n  if (e.target.innerText === '▶') {\n    showTrailersGallary();\n  }\n}\n\n// формування галереї трейлерів з ютуб\nfunction showTrailersGallary() {\n  embedTrailer = [];\n  // пошук трейлерів по id фільму\n  api.fetchTrailer(currentId).then(response => {\n    videosArr = response.data.results;\n\n    // якщо після запиту відео НЕ прийшли, то кнопка ▶ \"Show Trailer\" стає display:'none'\n    if (!videosArr.length) {\n      trailerBtn.style.display = 'none';\n      alert('No found trailers'); // це краще зробити це через бібліотеку Notify\n    } else {\n      // якщо після запиту Є масив з відео, то відкривається модалка відео-галереї\n      console.log(videosArr);\n      overlayForVideo.style.width = '100%';\n      // перебираємо всі запропоновіні відео, дістаємо ТІЛЬКИ трейлери, додаємо їх в масив трейлерів embedTrailer\n      videosArr.forEach(video => {\n        let { key, site, name, type } = video;\n        if (site === 'YouTube' && type === 'Trailer') {\n          embedTrailer.push(`\n                    <iframe src=\"https://www.youtube.com/embed/${key}\" \n                    title=\"${name}\" frameborder=\"0\" allow=\"accelerometer; autoplay; \n                    clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                    `);\n        }\n      });\n      // джойнимо і виводимо трейлери в галерею\n      overlayContent.innerHTML = embedTrailer.join('');\n    }\n  });\n}\n\n// закриття модалки з трейлерами при натисканні на кнопку \"Х\"\nfunction closeTrailersGallary() {\n  overlayForVideo.style.width = '0%';\n}\n\nexport {\n  onSearchTrailer,\n  getTrailerId,\n  openTrailersGallary,\n  showTrailersGallary,\n  closeTrailersGallary,\n};\n\nwindow.addEventListener('keydown', onEscClick)\n\nfunction onEscClick(evt) {\n\n  if (evt.code === 'Escape') {\n    evt.preventDefault();\n    document.body.classList.remove('no-scroll');\n    overlayForVideo.style.width = '0%';\n  }\n}\n\nconst backdrop = document.querySelector('.overlay__backdrop')\nbackdrop.addEventListener('click', onBackdropClick)\n// console.log(backdrop)\n\n\nfunction onBackdropClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    // console.log('Backdrop')\n    evt.preventDefault();\n    document.body.classList.remove('no-scroll');\n    overlayForVideo.style.width = '0%';\n  }\n}","import FetchFilmsApi from \"../fetch-service/fechFilmsApi\";\nimport { refs } from \"../fetch-service/refs\";\nimport { onCreat, creatCards, genresSerch, checkYear } from '../main/renderMainMarkup';\n\nconst fetchApi = new FetchFilmsApi();\nlet currentPage = 1;\nlet allGenres = {}; \nconst options = { mediaType: 'movie', timeWindow: 'week' }\n\nrefs.paginationListItemPrev.addEventListener('click', onClickBtnPrev);\nrefs.paginationListItemNext.addEventListener('click', onClickBtnNext)\n\nexport function onClickBtnNext() {\n  refs.gallery.innerHTML = \"\";\n  currentPage += 1;\n  fetchApi.actualPage = currentPage;\n  refs.paginationListItemPage.innerHTML = currentPage;\n  fetchApi.fetchWithAllFilmsData(options).then(data => creatCards(data.data.results))\n}\n\nfunction onClickBtnPrev() {\n  if (currentPage === 1) {\n    return\n  }\n  refs.gallery.innerHTML = \"\";\n  currentPage -= 1;\n  fetchApi.actualPage = currentPage;\n  refs.paginationListItemPage.innerHTML = currentPage;\n  fetchApi.fetchWithAllFilmsData(options).then(data => creatCards(data.data.results))\n}\n","export function onButtonScrolUp() {\n  document.addEventListener('DOMContentLoaded', () => {\n    let to_top_btn = document.querySelector('.btn-goup');\n\n    console.log(`btn on`);\n\n    window.onscroll = function () {\n      if (window.pageYOffset > 580) {\n        to_top_btn.classList.remove('is-hidden');\n      } else {\n        to_top_btn.classList.add('is-hidden');\n      }\n    };\n\n    // плавный скролл наверх\n    to_top_btn.addEventListener('click', function () {\n      console.log(`это я`);\n      window.scrollBy({\n        top: -window.pageYOffset,\n        behavior: 'smooth',\n      });\n    });\n  });\n}\n"],"names":["parcelRequire","$96LRb","$c8102e3bbd0d8e2a$var$filmsAPIService","$lhLDm","default","$c8102e3bbd0d8e2a$var$parameters","mediaType","lang","page","include_adult","refs","form","addEventListener","event","preventDefault","actualQuery","currentTarget","elements","filmname","value","formNotification","textContent","setTimeout","fetchWithSearchFilmData","then","resp","data","results","length","$2QMTS","creatCards","changeColor","document","body","classList","toggle","$39fadbe32e254e3b$var$fetchFilmsApi","async","$39fadbe32e254e3b$var$closeModal","e","target","modalCloseBtn","backdrop","keyCode","remove","add","removeEventListener","window","gallery","contains","modalContent","innerHTML","filmId","dataset","id","getCurrentFilm","$8DW4i","createMarkup","catch","error","console","log","evt","code","$39fadbe32e254e3b$var$backdrop","querySelector","$d3ca4124ad63d943$var$api","$d3ca4124ad63d943$var$currentId","$d3ca4124ad63d943$var$videosArr","$d3ca4124ad63d943$var$embedTrailer","$d3ca4124ad63d943$var$trailerBtn","$d3ca4124ad63d943$var$closeBtn","$d3ca4124ad63d943$var$overlayForVideo","$d3ca4124ad63d943$var$overlayContent","Number","innerText","fetchTrailer","response","style","width","forEach","video","key","site","name","type","push","join","display","alert","$dc99704b19fadb74$var$fetchApi","$dc99704b19fadb74$var$currentPage","$dc99704b19fadb74$var$options","timeWindow","paginationListItemPrev","actualPage","paginationListItemPage","fetchWithAllFilmsData","paginationListItemNext","to_top_btn","onscroll","pageYOffset","scrollBy","top","behavior","onCreat"],"version":3,"file":"index.537aed96.js.map"}