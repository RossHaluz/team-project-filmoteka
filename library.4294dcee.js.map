{"mappings":"gfAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,0BCCME,EAAW,+BAGXC,GAFY,GAAYC,OAATF,EAAS,wBACX,GAAYE,OAATF,EAAS,iBAChB,GAAYE,OAATF,EAAS,Y,WDKL,IAAI,EAAAD,EAAAI,SAE1BC,EAAAC,KAAKC,QAAQC,iBAAiB,SAO9B,WACEH,EAAAC,KAAKG,MAAMC,UAAUC,OAAO,eAC5BN,EAAAC,KAAKC,QAAQG,UAAUE,IAAI,c,IAP7B,IAAMC,EAAoB,IAAI,EAAAC,EAAAC,0BAqBxBV,EAAAC,KAAKC,QAAQG,UAAUM,SAAS,iBAClCC,QAAQC,IAAI,WACZb,EAAAC,KAAKG,MAAMC,UAAUC,OAAO,eAC5BN,EAAAC,KAAKC,QAAQG,UAAUE,IAAI,eAC3BP,EAAAC,KAAKa,YAAYC,UAAY,GAC7BC,OAASR,EAAkBS,WAC3BL,QAAQC,IAAIG,QACZA,OAAOE,KAAI,SAAAC,IAlBf,SAAuBA,GACrB,OAAOC,MAAM,GAAYtB,OAATD,GAAuBC,OAAdqB,EAAG,aAAmBrB,OCxBjC,qCDyBXuB,MAAK,SAAAC,GACJ,OAAOA,EAASC,M,IAEjBC,OAAM,SAAAC,GACLb,QAAQC,IAAIY,E,KAaZC,CAAcP,GAAIE,MAAK,SAAAM,GAO7B,IAAwBC,EAkBNC,EAHEC,EAfIF,EANDD,EAOrB3B,EAAAC,KAAKa,YAAYC,WAAa,8DAEqBjB,OADxB8B,EAAKT,GAAG,0DAEjCrB,OADiD8B,EAAKG,YAAY,WAIjCjC,OAHjC8B,EAAKI,MACN,mGAGmClC,OADD8B,EAAKI,MAAM,8CAERlC,QAMpBgC,EAP6BF,EAAKE,OAQ7CA,EAAOZ,KAAI,SAAAe,G,OAAMA,EAAGC,I,IAAMC,KAAK,OARsB,4CACMrC,QASlD+B,EAT+BD,EAAKQ,aAU7C,KAAsBtC,OAAjB+B,EAAKQ,MAAM,EAAG,KAVwC,qE","sources":["src/js/main-library.js","src/js/main/watched.js","src/js/fetch-service/api-vars.js"],"sourcesContent":["import refs from './fetch-service/refs';\nimport { LocalStorageServiceFilms } from './fetch-service/localStorageService';\nimport { addWatched } from './main/renderLibrary';\nimport { onClickBtnQueue, onClickBtnWatched } from './main/header-library-btn';\nimport {\n  getFilmsById,\n  onClickBtnLibraryWatched,\n} from './main/renderLibraryMarkup';\nimport { renderFilmsById } from './main/watched';\nimport { openTeamModal } from './modal/close-modal';\nimport { createMarkup } from './fetch-service/renderFuncApi';\n// import { openModal } from './modal/modals';\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\nimport { refs } from '../fetch-service/refs';\nimport { API_KEY, ID_URL } from '../fetch-service/api-vars';\nimport {\n  createMarkup,\n  toChangeGenres,\n  toChangeNum,\n} from '../fetch-service/renderFuncApi';\nconst fetchFilmsApi = new FetchFilmsApi();\n// refs.libraryList.addEventListener('click', createMarkup);\nrefs.watched.addEventListener('click', onClickWatched);\n// refs.queue.addEventListener('click', onClickQueue);\nconst localStorageFilms = new LocalStorageServiceFilms();\n// function onClickQueue() {\n//   refs.queue.classList.add('btn--active');\n//   refs.watched.classList.remove('btn--active');\n// }\nfunction onClickWatched() {\n  refs.queue.classList.remove('btn--active');\n  refs.watched.classList.add('btn--active');\n}\n\nfunction fetchFilmById(id) {\n  return fetch(`${ID_URL}${id}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nexport function renderFilmsById() {\n  if (refs.watched.classList.contains('btn--active')) {\n    console.log('it work');\n    refs.queue.classList.remove('btn--active');\n    refs.watched.classList.add('btn--active');\n    refs.libraryList.innerHTML = '';\n    getIds = localStorageFilms.getFilms();\n    console.log(getIds);\n    getIds.map(id => {\n      fetchFilmById(id).then(filmData => {\n        createListItem(filmData);\n      });\n    });\n  }\n}\nrenderFilmsById();\nfunction createListItem(data) {\n  refs.libraryList.innerHTML += `<li class=\"gallery-card card\">\n              <img data-id=${data.id} \n              src=\"https://image.tmdb.org/t/p/w500/${data.poster_path}\" alt=\"${\n    data.title\n  }\" class=\"card-image\">\n            <div class=\"card-info\">\n              <p class=\"card-name\">${data.title}</p>\n              <p class=\"card-genre\">${showGenres(data.genres)}\n              <span class=\"card-year\">${showYear(data.release_date)}\n              </span></p>\n              </div>\n          </li>`;\n}\n\nfunction showGenres(genres) {\n  return genres.map(el => el.name).join(', ');\n}\nfunction showYear(date) {\n  return `| ${date.slice(0, 4)}`;\n}\n\n// import { genresSerch } from '../main/renderMainMarkup';\n// import { onCreat, creatCards } from '../main/renderMainMarkup';\n// import { refs } from './refs';\n// import { LocalStorageServiceFilms } from '../fetch-service/localStorageService';\n// //  ADDED BY ANDRII\n// const localStorageServiceFilms = new LocalStorageServiceFilms();\n// const movieStore = localStorageServiceFilms.getFilms();\n// let activeText = '';\n// refs.backdrop.addEventListener('click', watchedBtnClick);\n// function watchedBtnClick(e) {\n//   if (\n//     e.target.innerText === 'ADD TO WATCHED' ||\n//     e.target.innerText === 'REMOVE FROM WATCHED'\n//   ) {\n//     handlerSetLocalStorage(e.target.dataset.id);\n//   }\n// }\n// function handlerSetLocalStorage(id) {\n//   const btn = document.querySelector('.modal__watched-btn');\n//   const { pushFilm, movies } = localStorageServiceFilms.setFilms(id);\n//   if (pushFilm) {\n//     btn.textContent = 'REMOVE FROM WATCHED';\n//   } else {\n//     btn.textContent = 'ADD TO WATCHED';\n//   }\n// }\n// // ADDED BY ANDRII SHKRAB\n// function createMarkup({\n//   id,\n//   poster_path,\n//   title,\n//   overview,\n//   vote_average,\n//   vote_count,\n//   original_title,\n//   popularity,\n//   genres,\n// }) {\n//   if (movieStore.indexOf(id) === -1) {\n//     activeText = 'ADD TO WATCHED';\n//   } else {\n//     activeText = 'REMOVE FROM WATCHED';\n//   }\n//   const markup = `\n//       <img\n//         class=\"modal__image\"\n//         src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n//         alt=\"${title}\"\n//         data-id=${id}\n//       />\n//       <div class=\"modal__text-content\">\n//         <h2 class=\"modal__title\">${title}</h2>\n//         <ul class=\"modal__info\">\n//           <li class=\"modal__info-key\">\n//             <p><span class=\"modal__vote-design\">Vote</span> / <span class=\"modal__votes-design\">Votes</span></p>\n//             <p>Popularity</p>\n//             <p>Original Title</p>\n//             <p>Genre</p>\n//           </li>\n//           <li class=\"modal__info-value\">\n//             <p>${vote_average} / ${vote_count}</p>\n//             <p>${popularity}</p>\n//             <p>${original_title}</p>\n//             <p>${createGenres(genres)}</p>\n//           </li>\n//         </ul>\n//         <h3 class=\"modal__about\">ABOUT</h3>\n//         <p class=\"modal__about-text\">${overview}</p>\n//         <div class=\"modal__btns\">\n//           <button type=\"button\" class=\"modal__watched-btn\" data-id = ${id}>${activeText}</button>\n//           <button type=\"button\" class=\"modal__queue-btn\">Add to Queue</button>\n//         </div>\n//       </div>\n//   `;\n\n//   refs.modalWrap.insertAdjacentHTML('beforeend', markup);\n// }\n\n// function createGenres(data) {\n//   return data.map(el => el.name).join(', ');\n// }\n// // <button type=\"button\" class=\"modal__close\">\n// // <svg class=\"icon-close\" width=\"30\" height=\"30\">\n// // <use href=\"./img/svg/sprite.svg#icon-close\">\n// // </use>\n// // </svg>\n// // </button>\n// export { createMarkup };\n","const API_KEY = 'f896ccabafb5d2939071b9f1aa9e42c1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL, ID_URL };"],"names":["parcelRequire","$90yji","$b921d68012d7e8ab$export$ca6dda5263526f75","$b921d68012d7e8ab$export$b85aa4b53a955004","concat","default","$1RuQn","refs","watched","addEventListener","queue","classList","remove","add","$a6644c01cbff66ac$var$localStorageFilms","$gtaxt","LocalStorageServiceFilms","contains","console","log","libraryList","innerHTML","getIds","getFilms","map","id","fetch","then","response","json","catch","error","$a6644c01cbff66ac$var$fetchFilmById","filmData","data","date","genres","poster_path","title","el","name","join","release_date","slice"],"version":3,"file":"library.4294dcee.js.map"}