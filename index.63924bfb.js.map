{"mappings":"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","sources":["src/js/main.js","src/js/main/searchMovies.js","src/js/main/changeColor.js","src/js/modal/modals.js","src/js/main/trailersGallery.js","src/js/paginatin/pagination.js","src/js/main/buttonScrolUp.js"],"sourcesContent":["import FetchFilmsApi from './fetch-service/fechFilmsApi';\nimport { onKeywordSearch } from './main/searchMovies';\nimport { onCreat, creatCards } from './main/renderMainMarkup';\nimport { onButtonScrolUp } from './main/buttonScrolUp';\nimport { onClickChangeColor } from './main/changeColor';\nimport { createMarkup } from './fetch-service/renderFuncApi';\nimport { openModal } from './modal/modals';\nimport { openTeamModal } from './modal/close-modal';\nonButtonScrolUp();\nonCreat();\n// addListenerToCard();\nimport { onSearchTrailer, getTrailerId, openTrailersGallary, showTrailersGallary, closeTrailersGallary } from \"./main/trailersGallery\";\nimport { onClickBtnNext } from './paginatin/pagination';\n\n\n\n\n\n\n","import { refs } from '../fetch-service/refs';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { creatCards } from './renderMainMarkup';\n\nconst filmsAPIService = new FetchFilmsApi();\nconst parameters = {\n  mediaType: 'movie',\n  lang: 'en-US',\n  page: filmsAPIService.page,\n  include_adult: false,\n};\n\nrefs.form.addEventListener('submit', onKeywordSearch);\n\n\n// Функція реалізує пошук та відображення фільмів за ключовим словом. Якщо пустий інпут або такого фільму немає - з'являється сповіщення. \nexport function onKeywordSearch(event) {\n  event.preventDefault();   \n\n  filmsAPIService.actualQuery = event.currentTarget.elements.filmname.value;\n\n  if (!filmsAPIService.actualQuery) {\n    refs.formNotification.textContent = \"The text field is empty. Please type something into it and retry.\",\n      setTimeout(() => refs.formNotification.textContent = \"\", 3000)\n    return;\n  }\n\n  filmsAPIService.fetchWithSearchFilmData(parameters).then(resp => {\n    if (!resp.data.results.length) {\n    refs.formNotification.textContent = \"Search result not successful. Enter the correct movie name and\";\n      setTimeout(() => refs.formNotification.textContent = \"\", 3000)\n      return;\n    }\n    creatCards(resp.data.results);\n  });\n}\n\n","import { refs } from \"../fetch-service/refs\";\n\n\nrefs.changeColor.addEventListener('click', onClickChangeColor);\n\nexport function onClickChangeColor() {\n    const edit = document.body;\n    edit.classList.toggle('dark');\n}\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { refs } from '../fetch-service/refs';\nimport { createMarkup } from '../fetch-service/renderFuncApi';\n\nconst fetchFilmsApi = new FetchFilmsApi();\nrefs.gallery.addEventListener('click', openModal);\nrefs.modalCloseBtn.addEventListener('click', closeModal);\n\nasync function openModal(e) {\n  if (!e.target.classList.contains('card-image')) {\n    return;\n  }\n\n  refs.backdrop.classList.remove('is-hidden');\n  document.body.classList.add('no-scroll');\n  refs.modalContent.innerHTML = '';\n  const filmId = e.target.dataset.id;\n\n  fetchFilmsApi\n    .getCurrentFilm({ id: filmId })\n    .then(data => createMarkup(data.data))\n    .catch(error => console.log(error));\n  refs.backdrop.addEventListener('click', closeModal);\n  window.addEventListener('keydown', closeModal);\n}\n\nasync function closeModal(e) {\n  if (\n    e.target === refs.modalCloseBtn ||\n    e.target === refs.backdrop ||\n    e.keyCode === 27\n  ) {\n    document.body.classList.remove('no-scroll');\n    refs.backdrop.classList.add('is-hidden');\n  }\n  refs.backdrop.removeEventListener('click', closeModal);\n  window.removeEventListener('keydown', closeModal);\n}\n\nexport { openModal };\n","import { refs } from '../fetch-service/refs';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\n\nconst api = new FetchFilmsApi(); //ініціалізація класу запитів\n\nlet currentId = 0; // поточний id фільму, який відкритий в модалці\nlet videosArr = []; // масив для всіх знайдених відео\nlet embedTrailer = []; // масив для трейлерів на ютубі, які додаються у відео-галерею\n\nconst trailerBtn = document.querySelector('.modal__trailer-btn'); //кнопка запуску трейлера\nconst closeBtn = document.querySelector('.closebtn'); //кнопка закриття відео-галереї\nconst overlayForVideo = document.querySelector('#overlay-video'); //модалка для відео-галереї\nconst overlayContent = document.querySelector('#overlay-content'); //наповнення відео-галереї\n\nrefs.gallery.addEventListener('click', getTrailerId); //слухач принатискання на картку фільма\nrefs.backdrop.addEventListener('click', openTrailersGallary); //слухач відкриття модалного вікна з карткою фільму\ncloseBtn.addEventListener('click', closeTrailersGallary); //слухач закриття відео-галереї\n\n// отримання id фільму\nfunction getTrailerId(e) {\n  currentId = Number(e.target.dataset.id);\n}\n\n// відкриття модалки з трейлерами при натисканні на кнопку ▶ \"Show Trailer\" \nfunction openTrailersGallary(e) {\n  if (e.target.innerText === '▶') {\n    showTrailersGallary();\n  }\n}\n\n// формування галереї трейлерів з ютуб\nfunction showTrailersGallary() {\n  embedTrailer = [];\n  // пошук трейлерів по id фільму\n  api.fetchTrailer(currentId).then(response => {\n    videosArr = response.data.results;\n\n    // якщо після запиту відео НЕ прийшли, то кнопка ▶ \"Show Trailer\" стає display:'none'\n    if (!videosArr.length) {\n      trailerBtn.style.display = 'none';\n      alert('No found trailers'); // це краще зробити це через бібліотеку Notify\n    } else {\n      // якщо після запиту Є масив з відео, то відкривається модалка відео-галереї\n      console.log(videosArr);\n      overlayForVideo.style.width = '100%';\n      // перебираємо всі запропоновіні відео, дістаємо ТІЛЬКИ трейлери, додаємо їх в масив трейлерів embedTrailer\n      videosArr.forEach(video => {\n        let { key, site, name, type } = video;\n        if (site === 'YouTube' && type === 'Trailer') {\n          embedTrailer.push(`\n                    <iframe src=\"https://www.youtube.com/embed/${key}\" \n                    title=\"${name}\" frameborder=\"0\" allow=\"accelerometer; autoplay; \n                    clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                    `);\n        }\n      });\n      // джойнимо і виводимо трейлери в галерею\n      overlayContent.innerHTML = embedTrailer.join('');\n    }\n  });\n}\n\n// закриття модалки з трейлерами при натисканні на кнопку \"Х\"\nfunction closeTrailersGallary() {\n  overlayForVideo.style.width = '0%';\n}\n\nexport {\n  onSearchTrailer,\n  getTrailerId,\n  openTrailersGallary,\n  showTrailersGallary,\n  closeTrailersGallary,\n};\n\nwindow.addEventListener('keydown', onEscClick)\n\nfunction onEscClick(evt) {\n\n  if (evt.code === 'Escape') {\n    evt.preventDefault();\n    overlayForVideo.style.width = '0%';\n  }\n}\n\nconst backdrop = document.querySelector('.overlay__backdrop')\nbackdrop.addEventListener('click', onBackdropClick)\n// console.log(backdrop)\n\n\nfunction onBackdropClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    // console.log('Backdrop')\n    evt.preventDefault();\n    overlayForVideo.style.width = '0%';\n  }\n}","import FetchFilmsApi from \"../fetch-service/fechFilmsApi\";\nimport { refs } from \"../fetch-service/refs\";\n\nconst fetchApi = new FetchFilmsApi();\nlet currentPage = 1;\nconst options = { mediaType: 'movie', timeWindow: 'week' }\n\nrefs.paginationListItemPrev.addEventListener('click', onClickBtnPrev);\nrefs.paginationListItemNext.addEventListener('click', onClickBtnNext)\n\nexport function onClickBtnNext() {\n  refs.gallery.innerHTML = \"\";\n  currentPage += 1;\n  fetchApi.actualPage = currentPage;\n  refs.paginationListItemPage.innerHTML = currentPage;\n  fetchApi.fetchWithAllFilmsData(options).then(data => creatMarkupPagination(data.data.results))\n}\n\nfunction onClickBtnPrev() {\n  if (currentPage === 1) {\n    return\n  }\n  refs.gallery.innerHTML = \"\";\n  currentPage -= 1;\n  fetchApi.actualPage = currentPage;\n  refs.paginationListItemPage.innerHTML = currentPage;\n  fetchApi.fetchWithAllFilmsData(options).then(data => creatMarkupPagination(data.data.results))\n}\n\nfunction creatMarkupPagination(arr) {\n  const markup = arr.map(({ poster_path, title, release_date, id }) => `\n  <li class=\"galery-list__item card-set-iteam\">\n          <img data-id=${id} src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"galery-list__img\" />\n          <h3 class=\"galery-list__title\">${title}</h3>\n          <p class=\"galery-list__desc\">\n            Science Fiction, Action, Adventure, Drama | ${splitDate(release_date)}\n          </p>\n        </li>\n  `).join('');\n\n  refs.gallery.innerHTML = markup;\n}\n\nfunction splitDate(value) {\n    const slit = value.split('').slice(0, 4).join('');\n\n    return slit;\n\n}","export function onButtonScrolUp() {\n  document.addEventListener('DOMContentLoaded', () => {\n    let to_top_btn = document.querySelector('.btn-goup');\n\n    console.log(`btn on`);\n\n    window.onscroll = function () {\n      if (window.pageYOffset > 580) {\n        to_top_btn.classList.remove('is-hidden');\n      } else {\n        to_top_btn.classList.add('is-hidden');\n      }\n    };\n\n    // плавный скролл наверх\n    to_top_btn.addEventListener('click', function () {\n      console.log(`это я`);\n      window.scrollBy({\n        top: -window.pageYOffset,\n        behavior: 'smooth',\n      });\n    });\n  });\n}\n"],"names":["parcelRequire","$1RuQn","$4609dd7e660aa1d8$var$filmsAPIService","$90yji","default","$4609dd7e660aa1d8$var$parameters","mediaType","lang","page","include_adult","refs","form","addEventListener","event","preventDefault","actualQuery","currentTarget","elements","filmname","value","formNotification","textContent","setTimeout","fetchWithSearchFilmData","then","resp","data","results","length","$kvKoM","creatCards","changeColor","document","body","classList","toggle","$bpxeT","$4c7290db94832356$var$fetchFilmsApi","$4c7290db94832356$var$_openModal","$parcel$interopDefault","$2TvXO","mark","_callee","e","filmId","target","contains","backdrop","remove","add","modalContent","innerHTML","dataset","id","getCurrentFilm","$eLVJN","createMarkup","catch","error","console","log","$4c7290db94832356$var$closeModal","window","apply","this","arguments","$4c7290db94832356$var$_closeModal","modalCloseBtn","keyCode","removeEventListener","gallery","$2827c5376f0d5587$var$api","$2827c5376f0d5587$var$currentId","$2827c5376f0d5587$var$videosArr","$2827c5376f0d5587$var$embedTrailer","$2827c5376f0d5587$var$trailerBtn","querySelector","$2827c5376f0d5587$var$closeBtn","$2827c5376f0d5587$var$overlayForVideo","$2827c5376f0d5587$var$overlayContent","Number","innerText","fetchTrailer","response","style","width","forEach","video","key","site","name","type","push","concat","join","display","alert","evt","code","$315b20679e144ef4$var$fetchApi","$315b20679e144ef4$var$currentPage","$315b20679e144ef4$var$options","timeWindow","$315b20679e144ef4$var$creatMarkupPagination","arr","markup","map","param","poster_path","title","release_date","split","slice","paginationListItemPrev","actualPage","paginationListItemPage","fetchWithAllFilmsData","paginationListItemNext","to_top_btn","onscroll","pageYOffset","scrollBy","top","behavior","onCreat"],"version":3,"file":"index.63924bfb.js.map"}