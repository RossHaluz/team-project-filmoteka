{"mappings":"gfAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,0BCAAE,EAAAF,EAAA,S,IA2BAG,EAxBA,SAA4BC,GACxB,IAAMC,EAASD,EAAIE,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAAYH,EAAZG,a,MAAmB,6GAEMC,OAArBH,EAAY,WACvBG,OADgCF,EAAM,4EAGvBE,OAFfF,EAAM,4GAEiCE,OAAdD,EAU7CE,MAAM,IAAIC,MAAM,EAAG,GAAGC,KAAK,IAVgC,wC,IAG3EA,KAAK,IAERZ,EAAAa,QAAKC,WAAWC,UAAYZ,C,EDT1Ba,EAAW,IAAI,EAAAjB,EAAAc,SAIrB,SAASI,EAAaC,GAClBA,EAAEC,iBACF,IAAMC,EAAkBpB,EAAAa,QAAKQ,UAAUC,MAAMC,OAC7CP,EAASQ,WAAaJ,EAEtBpB,EAAAa,QAAKC,WAAWC,UAAY,GAE5BC,EAASS,kBAAkBC,MAAK,SAAAC,GACvBA,EAAKC,QAAQC,SAGlB5B,EAAmB0B,EAAKC,UACL,EAAAE,EAAAC,kBAAiBJ,EAAKK,cAAeL,EAAKM,aAElDC,GAAG,cAAc,SAAA7B,G,IAAG8B,EAAI9B,EAAJ8B,KAC3BnC,EAAAa,QAAKC,WAAWC,UAAY,GAC5BC,EAASoB,QAAUD,EACvBnB,EAASS,kBAAkBC,MAAK,SAAAW,GAChCrC,EAAAa,QAAKC,WAAWC,UAAYd,EAAmBoC,EAAKT,Q,WAItDU,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IAxB/BvC,EAAAa,QAAK6B,KAAKC,iBAAiB,SAAU1B,G,uBEPrCjB,EAAAF,EAAA,UAEAe,QAAK+B,YAAYD,iBAAiB,SAE3B,WACUE,SAASC,KACjBC,UAAUC,OAAO,O,ICN1BhD,EAAAF,EAAA,S,wBCAAA,EAAA,S,aDMA,IACImD,EADEC,EAAU,IAAI,EAAAnD,EAAAc,SAoCpB,SAASsC,IACLnD,EAAAa,QAAKuC,cAAcL,UAAUM,IAAI,Y,CA/BrCrD,EAAAa,QAAKC,WAAW6B,iBAAiB,SAG1B,SAAqBzB,GAC5B,IAAKA,EAAEoC,OAAOP,UAAUQ,SAAS,oBAC7B,OAEDvD,EAAAa,QAAK2C,WAAWzC,UAAY,GAC3BkC,EAAS/B,EAAEoC,OAAOG,QAAQC,GAC1BR,EAAQS,UAAYV,EAEpBjD,EAAAa,QAAKuC,cAAcL,UAAUa,OAAO,aAEpCV,EAAQW,sBAAsBnC,MAAK,SAAAW,GCpBhC,IAA2BhC,EAAEC,EAAaC,EAAOuD,EAAcC,EAAYC,EAAYC,EACtF9D,EAD4BG,GAAFD,EDqBRgC,GCrBU/B,YAAaC,EAAfF,EAAeE,MAAOuD,EAAtBzD,EAAsByD,aAAcC,EAApC1D,EAAoC0D,WAAYC,EAAhD3D,EAAgD2D,WAAYC,EAA5D5D,EAA4D4D,SACtF9D,EAAS,4FAIJM,OADgCH,EAAY,kBAQ1BG,OAPlBF,EAAM,2KAiBqBE,OAVTF,EAAM,8XAUgCE,OAA7BqD,EAAaI,QAAQ,GAAG,OACxBzD,OAD6BsD,EAAW,iDAExCtD,OADAuD,EAAW,iDAS3CvD,OARgCF,EAAM,+LAQ7BE,OAATwD,EAAS,4CAMfjE,EAAAa,QAAK2C,WAAWW,mBAAmB,YAAahE,E,OD9BlDH,EAAAa,QAAKuD,SAASzB,iBAAiB,SAyB/B,WACIQ,G,IAPJkB,OAAO1B,iBAAiB,SAAS,SAACzB,GAC1BA,EAAEoC,SAAWtD,EAAAa,QAAKuC,eAClBD,G","sources":["src/js/main.js","src/js/main/searchMovies.js","src/js/main/renderMarkupSearch.js","src/js/main/changeColor.js","src/js/modal/modals.js","src/js/main/renderMarkupModal.js"],"sourcesContent":["import FetchFilmsApi from \"./fetch-service/fechFilmsApi\";\nimport onFormSubmit from './main/searchMovies';\nimport refs from './fetch-service/refs';\nimport renderMarkupSearch from \"./main/renderMarkupSearch\";\nimport getTrendingMoviesAndRender from \"./main/renderMainMarkup\";\nimport onClickChangeColor from './main/changeColor';\nimport { onClickFilm } from './modal/modals';\nimport { renderMarkupModal } from './main/renderMarkupModal';\nimport { createPagination } from './paginatin/pagination';\n// createPagination() \n\n// import { onCreat, creatCards} from './main/renderMainMarkup';\n// onCreat()\n\n","import FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport refs from '../fetch-service/refs';\nimport { createPagination } from '../paginatin/pagination';\nimport renderMarkupSearch from './renderMarkupSearch';\n\nconst apiFetch = new FetchFilmsApi()\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n    e.preventDefault();\n    const formInputSearch = refs.formImput.value.trim()\n    apiFetch.serchValue = formInputSearch;\n\n    refs.galeryList.innerHTML = \"\";\n\n    apiFetch.getMouvieSearch().then(data => {\n        if (!data.results.length) {\n            return\n        }\n        renderMarkupSearch(data.results)\n        const pagination = createPagination(data.total_results, data.total_pages);\n\n        pagination.on('beforeMove', ({ page }) => {\n            refs.galeryList.innerHTML = '';\n            apiFetch.pageNum = page;\n        apiFetch.getMouvieSearch().then(data => {\n        refs.galeryList.innerHTML = renderMarkupSearch(data.results);\n        });\n      \n      });\n   }).catch(err => console.log(err))\n\n}\n\nexport default onFormSubmit","import refs from \"../fetch-service/refs\";\n\n\nfunction renderMarkupSearch(arr) {\n    const markup = arr.map(({ poster_path, title, release_date }) => `\n     <li class=\"galery-list__item card-set-iteam\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"galery-list__img\" />\n          <h3 class=\"galery-list__title\">${title}</h3>\n          <p class=\"galery-list__desc\">\n            Science Fiction, Action, Adventure, Drama | ${splitDate(release_date)}\n          </p>\n        </li>\n    `).join('');\n\n    refs.galeryList.innerHTML = markup;\n    \n}\n\nfunction splitDate(value) {\n    const slit = value.split('').slice(0, 4).join('');\n\n    return slit;\n\n}\n\n\n\nexport default renderMarkupSearch\n\n","import refs from \"../fetch-service/refs\";\n\nrefs.changeColor.addEventListener('click', onClickChangeColor);\n\nexport function onClickChangeColor() {\n    const edit = document.body;\n    edit.classList.toggle('dark');\n}","import refs from \"../fetch-service/refs\";\nimport getTrendingMoviesAndRender from '../main/renderMainMarkup';\nimport FetchFilmsApi from '../fetch-service/fechFilmsApi';\nimport { renderMarkupModal } from '../main/renderMarkupModal';\n\n\nconst fethApi = new FetchFilmsApi()\nlet filmId;\n\n// refs.galeryList.addEventListener('click', onClickFilm);\n// refs.closeBtn.addEventListener('click', onClickCloseBtn);\n\nrefs.galeryList.addEventListener('click', onClickFilm);\nrefs.closeBtn.addEventListener('click', onClickCloseBtn);\n\nexport function onClickFilm(e) {\nif (!e.target.classList.contains('galery-list__img')) {\n    return;\n}\n   refs.modalWrapp.innerHTML = \"\";\n    filmId = e.target.dataset.id;\n    fethApi.getIdFilm = filmId;\n    \n    refs.backdropModal.classList.remove('is-hidden');\n\n    fethApi.getDateilsMovieById().then(data => {\n        renderMarkupModal(data)\n    })\n     \n    \n}\n\nwindow.addEventListener('click', (e) => {\n    if (e.target === refs.backdropModal) {\n        closeModal()\n    }\n})\n\nfunction onClickCloseBtn() {\n    closeModal();\n}\n\nfunction closeModal() {\n    refs.backdropModal.classList.add('is-hidden');\n}\n","import fetchFilmsApi from '../fetch-service/fechFilmsApi'\nimport refs from '../fetch-service/refs';\nimport { onClickFilm } from '../modal/modals'\n\n\nexport function renderMarkupModal({ poster_path, title, vote_average, vote_count, popularity, overview }) {\n  const markup = `\n    <div class=\"modal-content\">\n     <img\n      src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n      alt=\"${title}\"\n      width=\"400\"\n      height=\"500\"\n      class=\"modal__img\"\n    />\n    <div class=\"modal-wrapp\">\n    <div class=\"modal-cover\">\n    <h2 class=\"modal__title\">${title}</h2>\n    <div class=\"modal-list-cover\">\n    <ul class=\"modal__list list\">\n      <li class=\"modal__list--item\">Vote / Votes</li>\n      <li class=\"modal__list--item\">Popularity</li>\n      <li class=\"modal__list--item\">Original Title</li>\n      <li class=\"modal__list--item\">Genre</li>\n    </ul>\n\n    <ul class=\"moda__option list\">\n      <li class=\"modal__option--item\">${vote_average.toFixed(1)} / ${vote_count}</li>\n      <li class=\"modal__option--item\">${popularity}</li>\n      <li class=\"modal__option--item\">${title}</li>\n      <li class=\"modal__option--item\">SCIENCE FICTION</li>\n    </ul>\n    </div>\n    </div>\n\n    <h3 class=\"modal__about\">ABOUT</h3>\n    <p class=\"modal__about--text\">\n      ${overview}\n    </p>\n    </div>\n    </div>\n    `; \n  \n  refs.modalWrapp.insertAdjacentHTML('beforeend', markup)\n}\n"],"names":["parcelRequire","$90yji","$1RuQn","$d5dc56124f02e52b$export$2e2bcd8739ae039","arr","markup","map","param","poster_path","title","release_date","concat","split","slice","join","default","galeryList","innerHTML","$4609dd7e660aa1d8$var$apiFetch","$4609dd7e660aa1d8$var$onFormSubmit","e","preventDefault","formInputSearch","formImput","value","trim","serchValue","getMouvieSearch","then","data1","results","length","$4eIG7","createPagination","total_results","total_pages","on","page","pageNum","data","catch","err","console","log","form","addEventListener","changeColor","document","body","classList","toggle","$4c7290db94832356$var$filmId","$4c7290db94832356$var$fethApi","$4c7290db94832356$var$closeModal","backdropModal","add","target","contains","modalWrapp","dataset","id","getIdFilm","remove","getDateilsMovieById","vote_average","vote_count","popularity","overview","toFixed","insertAdjacentHTML","closeBtn","window"],"version":3,"file":"index.6c7b08bd.js.map"}